
dims.h,146
# define DIMS_H2,15
typedef enum dim 7,190
  dim_x,8,209
  dim_y,9,218
  num_dims10,227
} dim_t;11,238
typedef int8_t pair_t[pair_t13,248

dungeon.c,1617
#define DUMP_HARDNESS_IMAGES 17,285
typedef struct corridor_path 19,317
  heap_node_t *hn;hn20,348
  uint8_t pos[pos21,367
  uint8_t from[from22,385
  int32_t cost;23,404
} corridor_path_t;24,420
void move(54,967
void pcRandomMovement(68,1375
static uint32_t adjacent_to_room(98,2193
static uint32_t is_open_space(106,2454
static int32_t corridor_path_cmp(111,2553
static void dijkstra_corridor(115,2703
static void dijkstra_corridor_inv(214,6440
#define hardnesspair_inv(267,7762
static int connect_two_rooms(317,10433
static int create_cycle(336,11085
static int connect_rooms(378,12650
int gaussian[gaussian391,12843
typedef struct queue_node 399,12999
  int x,400,13027
  int x, y;400,13027
  struct queue_node *next;next401,13039
} queue_node_t;402,13066
static int smooth_hardness(404,13083
static int empty_dungeon(563,17354
static int place_rooms(582,17730
static void place_stairs(619,18917
static int make_rooms(641,19552
int gen_dungeon(664,20115
void render_dungeon(677,20277
void delete_dungeon(717,21221
void init_dungeon(722,21278
int write_dungeon_map(727,21335
int write_rooms(740,21564
uint16_t count_up_stairs(762,22036
uint16_t count_down_stairs(778,22287
int write_stairs(794,22542
uint32_t calculate_dungeon_size(826,23297
int write_dungeon(837,23768
int read_dungeon_map(903,25323
int read_stairs(926,25921
int read_rooms(949,26398
int read_dungeon(1007,28324
int read_pgm(1088,30201
void render_hardness_map(1173,32604
void render_movement_cost_map(1196,33131
void render_distance_map(1218,33636
void render_tunnel_distance_map(1257,34670

dungeon.h,1274
# define DUNGEON_H2,18
#define DUNGEON_X 7,77
#define DUNGEON_Y 8,111
#define MIN_ROOMS 9,145
#define MAX_ROOMS 10,178
#define ROOM_MIN_X 11,212
#define ROOM_MIN_Y 12,245
#define ROOM_MAX_X 13,278
#define ROOM_MAX_Y 14,312
#define NUM_MONSTERS 15,346
#define SAVE_DIR 16,424
#define DUNGEON_SAVE_FILE 17,465
#define DUNGEON_SAVE_SEMANTIC 18,506
#define DUNGEON_SAVE_VERSION 19,552
#define mappair(21,587
#define mapxy(22,644
#define hardnesspair(23,679
#define hardnessxy(24,746
typedef enum __attribute__ ((__packed__)) terrain_type 26,792
  ter_debug,27,849
  ter_wall,28,862
  ter_wall_immutable,29,874
  ter_floor,30,896
  ter_floor_room,31,909
  ter_floor_hall,32,927
  ter_stairs,33,945
  ter_stairs_up,34,959
  ter_stairs_down35,976
} terrain_type_t;36,994
typedef struct room 38,1013
  pair_t position;39,1035
  pair_t size;40,1054
} room_t;41,1069
typedef struct pc 43,1080
  pair_t position;44,1100
} pc_t;45,1119
typedef struct dungeon 47,1128
  uint32_t num_rooms;48,1153
  room_t *rooms;rooms49,1175
  terrain_type_t map[map50,1192
  uint8_t hardness[hardness59,1845
  uint8_t pc_distance[pc_distance60,1887
  uint8_t pc_tunnel[pc_tunnel61,1932
  pc_t pc;62,1975
  int num_monsters;63,1986
} dungeon_t;64,2006

heap.c,1020
struct heap_node 8,99
  heap_node_t *next;next9,118
  heap_node_t *prev;prev10,139
  heap_node_t *parent;parent11,160
  heap_node_t *child;child12,183
  void *datum;datum13,205
  uint32_t degree;14,220
  uint32_t mark;15,239
#define swap(18,260
#define splice_heap_node_lists(24,372
#define insert_heap_node_in_list(33,684
#define remove_heap_node_from_list(40,908
void print_heap_node(45,1041
void print_heap(61,1363
void print_heap_node_list(78,1665
void heap_init(94,1864
void heap_node_delete(104,2100
void heap_delete(122,2404
heap_node_t *heap_insert(heap_insert133,2569
void *heap_peek_min(heap_peek_min153,2895
static void heap_link(158,2971
static void heap_consolidate(172,3293
void *heap_remove_min(heap_remove_min213,4226
int heap_combine(248,4760
static void heap_cut(277,5411
static void heap_cascading_cut(291,5692
int heap_decrease_key(305,5918
int heap_decrease_key_no_replace(319,6160
int32_t compare(343,6734
char *print_int(print_int348,6833
int main(357,6951

heap.h,245
# define HEAP_H2,15
typedef struct heap_node heap_node_t;11,114
typedef struct heap 13,153
  heap_node_t *min;min14,175
  uint32_t size;15,195
  int32_t (*compare)compare16,212
  void (*datum_delete)datum_delete17,269
} heap_t;18,301

path.c,302
static dungeon_t *dungeon;dungeon15,673
typedef struct path 17,701
  heap_node_t *hn;hn18,723
  uint8_t pos[pos19,742
} path_t;20,760
static int32_t dist_cmp(22,771
static int32_t tunnel_cmp(29,1125
void dijkstra(36,1473
#define tunnel_movement_cost(146,5965
void dijkstra_tunnel(149,6057

path.h,93
# define PATH_H2,15
# define HARDNESS_PER_TURN 4,32
typedef struct dungeon dungeon_t;6,63

rlg327.c,36
void usage(10,142
int main(19,376

utils.c,25
int makedirectory(9,124

utils.h,123
# define UTILS_H2,16
# define rand_under(6,147
# define rand_range(10,290
#define malloc(12,364
#define UNUSED(18,508
